name: CI and CD

on:
  push:
    branches:
      - stage

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  SAM_TEMPLATE: template.yaml
  STACK_NAME: salary-prediction
  # PROD_IMAGE_REPOSITORY: 502015294952.dkr.ecr.us-west-2.amazonaws.com/aws-sam-cli-managed-deploy-to-prod-pipeline-resources-imagerepository-qau90ddkdl0i
  # IMAGE_REPOSITORY: 690744128016.dkr.ecr.us-east-1.amazonaws.com/salarypredictionb144402d/predictfunction975a0b7frepo
  # --image-repository ${IMAGE_REPOSITORY} \
  # IMAGE_REPOSITORY: 690744128016.dkr.ecr.us-east-1.amazonaws.com/salary_prediction.v1
  AWS_REGION: us-east-1

jobs:
  lambda_apigateway:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region ${{ env.AWS_REGION }} 

      - name: Build and Validate Lambda Function
        run: |
          cd deployment/sam-app
          sam build
          sam validate

      - name: Deploy Lambda Function
        run: |
          cd deployment/sam-app  
          sam deploy --resolve-image-repos
            --stack-name ${STACK_NAME} \
            --template template.yaml \
            --capabilities CAPABILITY_IAM \
            --region ${AWS_REGION} \
            --no-fail-on-empty-changeset 


  flask_nginx:
    runs-on: ubuntu-latest
    needs: lambda_apigateway  
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        working-directory: deployment/web_flask
        run: |
          pip install pipenv
          pipenv install --dev

      - name: Start Flask Application
        run: |
          docker-compose -f docker-compose.yml up -d
          until docker-compose -f docker-compose.yml exec web curl -s -o /dev/null http://localhost:9696; do
            echo "Waiting for Flask to start..."
            sleep 5
          done

      - name: Run Tests
        run: |
          docker-compose -f docker-compose.yml exec web python test.py

      - name: Publish Docker image to GitHub Container Registry
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker-compose -f deployment/docker-compose.yml push

      - name: Deploy Flask App to EBS
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region us-east-1  
          eb deploy Salary_prediction

  test:
    runs-on: ubuntu-latest
    needs: flask_nginx  
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        working-directory: tests/
        run: pip install pipenv && pipenv install pytest pylint --dev

      - name: Run Unit tests
        working-directory: tests/unit_test
        run: pytest tests/

      - name: Lint
        working-directory: tests/integration_test
        run: pylint tests/

      - name: Integration Test
        working-directory: tests/integration_test/
        run: |
          pytest tests/
